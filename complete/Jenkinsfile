node {
  stage('init') {
    checkout scm
  }
  
  stage('build') {
    dir('complete') {
      sh 'mvn clean package'
    }
  }
  
  stage('deploy') {
    def resourceGroup = 'pclinuxdemosg'
    def webAppName = 'pclinuxdemo2'
    def registryServer = 'pcregistry1.azurecr.io'
    def imageName = "$registryServer/gs-spring-boot-docker"
    dir('complete') {
      sh 'cp src/main/docker/Dockerfile target/'
      azureWebAppPublish azureCredentialsId: 'mysp', publishType: 'docker',
                         resourceGroup: resourceGroup, appName: webAppName,
                         dockerFilePath: 'target/Dockerfile', dockerImageName: imageName, dockerImageTag: 'latest',
                         dockerRegistryEndpoint: [credentialsId: 'c49ec72d-13c6-412b-b74a-0178a4de2d63', url: "http://$registryServer"]
    }
  }
}
